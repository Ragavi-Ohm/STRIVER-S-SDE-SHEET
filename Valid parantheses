bool isValidParenthesis(string expression)
{
    // Write your code here.
    int n=expression.length();
    stack<int>s;
    for (int i = 0; i < n; i++){
        if(s.empty()||expression[i]=='{'||expression[i]=='['||expression[i]=='(')
        s.push(expression[i]);
      
        else if ((expression[i] == '}' && s.top() != '{') ||
            (expression[i] == ')' && s.top() != '(') ||
            (expression[i] == ']' && s.top() != '[')) {
          return false;
        }
        else
        {
            s.pop();
        }
      
    }
    if(!s.empty())
    return false;
    else
    return true;
}

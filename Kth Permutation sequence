#include<bits/stdc++.h>
#include<string>
string kthPermutation(int n, int k) {
    // Write your code here.
    int fact=1;
    string s="";
    vector<int>v;
    for(int i=1;i<n;i++)
    {
        fact=fact*i;
        v.push_back(i);
    }
    v.push_back(n);
    k=k-1;
    while(true)
    {
       s=s+to_string(v[k/fact]);
      
       v.erase(v.begin()+(k/fact));
       if(v.size()==0)
       break;
       k=k%fact;
       fact=fact/v.size();

    }
    return s;
}

EASY C++ STL SOLUTION:

string getPermutation(int n, int k) {
        
        int arr[n+1];
        for(int i=1;i<=n;i++)
        {
            arr[i-1]=i;
        }
        int cnt=1;
        while(next_permutation(arr,arr+n))
        {
            cnt++;
            if(cnt==k)
                break;
            
        }
        string ans="";
        int i=0;
        while(i<n)
        {
            ans.push_back(char(arr[i]+48));
            i++;
        }
        return ans;        
    }

  int func(int ind,int r,int c,vector<vector<char>>& board, string word,int m,int n,vector<vector<int>>&dp)
    {
        if(ind==word.length())
            return 1;
        if(r<0||c<0||r>=m||c>=n||word[ind]!=board[r][c]||dp[r][c]==1)
            return 0;
       
       
        //pick
        dp[r][c]=1;
        int res=func(ind+1,r+1,c,board,word,m,n,dp)+func(ind+1,r-1,c,board,word,m,n,dp)+func(ind+1,r,c+1,board,word,m,n,dp)+func(ind+1,r,c-1,board,word,m,n,dp);
        dp[r][c]=0;
        return res;
        
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size();
        int n=board[0].size();
        vector<vector<int>>dp(m+1,vector<int>(n+1,0));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(func(0,i,j,board,word,m,n,dp))
                    return true;
            }
        }
        return false;
        
    }

bool isValidParenthesis(string expression)
{
    // Write your code here.
    stack<int>s;
    for (int i = 0; i < expression.length(); i++)
    {
        if(expression[i]=='{'||expression[i]=='['||expression[i]=='(')
        {
            s.push(expression[i]);
        }
        
        else if(!s.empty())
        {
            if((expression[i] == ']' && s.top() != '[') ||(expression[i] == '}' && s.top() != '{') ||(expression[i] == ')' && s.top() != '('))
            {
                return false;
            }
            else
            {
                s.pop();
            }
        }

        else {
          return false; //'}'
        }
    }
    if(!s.empty())
    return false;
    else
    return true;
}
